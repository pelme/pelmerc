#!/bin/bash

PELMERC=$HOME/.pelmerc
BACKUP_DESTINATION=$HOME/.pelmerc_backup

link() {
    filename="$PELMERC/$1"
    symlink_name="$2"

    # Does the target already exist and is not a symlink?
    if [ -e "$symlink_name" ] && [ ! -h "$symlink_name" ]; then
        echo "$symlink_name already exists, please remove it and run prc_install again"
        exit 1
    fi

    echo "Setting up file $symlink_name -> $filename"
    rm -f "$symlink_name"
    mkdir -p $(dirname "$2")
    ln -sf "$filename" "$symlink_name"
}


link_config() {
    link $1 ~/.$1
}

link_home() {
    link "$1" "$HOME/$1"
}

link_fish() {
    link fish/$1 ~/.config/fish/$1
}

link_bin() {
    link bin/$1 ~/bin/$1
}

link_config vimrc
link vim-plug/plug.vim ~/.vim/autoload/plug.vim

link vimrc ~/.config/nvim/init.vim
link vim-plug/plug.vim ~/.config/nvim/autoload/plug.vim
link vim/UltiSnips ~/.config/nvim/UltiSnips

link_config zshrc
link_config gitconfig
link_config gitattributes
link_config githelpers
link_config tmux.conf
link_config ackrc
link_config bpython
link_config psqlrc

link_home "Library/Application Support/Karabiner/private.xml"

link_fish config.fish
link_fish functions
link_fish config.d

link_bin prc_install
link_bin prc_update
link_bin cleanup.sh
link_bin keep
link_bin push_migration_numbers.py
link_bin markdown
link_bin trans
link_bin poedit
link_bin sublmod
link_bin mirror_tests
link_bin sphinx-autobuild-html
link_bin shell_light

mkdir -p $HOME/.virtualenvs

# Do not bother if ssh-copy-id is provided
which ssh-copy-id > /dev/null || link_bin ssh-copy-id

echo "All good!"
echo " - Use rehash to update PATH with new commands"
echo " - Use chsh -s /bin/zsh to change shell"
